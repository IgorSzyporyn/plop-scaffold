{{#hasHook hooks}}
  {{#hasBothHooks hooks}}
import React, { useEffect, useState } from 'react'
  {{else}}
    {{#ifIn  "useeffect" hooks}}
import React, { useEffect } from 'react'
    {{/ifIn}}
    {{#ifIn  "usestate" hooks}}
import React, { useState } from 'react'
    {{/ifIn}}
  {{/hasBothHooks}}
{{else}}
import React from 'react'
{{/hasHook}}
{{#ifNotEqual "no" cssinjs}}
import styled from '{{cssinjs}}'
{{/ifNotEqual}}
{{#ifIn "usestate" hooks}}
  {{#ifEqual "yes" examples}}

const initialMyState = {
  mounted: false,
}
  {{else}}

const initialMyState = {}
  {{/ifEqual}}
{{/ifIn}}
{{#ifEqual "yes" examples}}

export const {{pascalCase name}} = ({ children, title, ...rest }) => {
{{else}}

export const {{pascalCase name}} = ({ ...rest }) => {
{{/ifEqual}}
{{#ifIn "usestate" hooks}}
  const [myState, setMyState] = useState({ ...initialMyState })

{{/ifIn}}
{{#ifIn "useeffect" hooks}}
  useEffect(() => {
  {{#ifEqual "yes" examples}}
    // Do stuff on mount here
      {{#ifIn "usestate" hooks}}
    setMyState((state) => ({ ...state, mounted: true }))
      {{/ifIn}}
    // Do stuff on unmount here
    return () => {}
  {{/ifEqual}}
  }, [])

{{/ifIn}}
  return (
  {{#ifNotEqual "no" cssinjs}}
    {{#ifEqual "yes" examples}}
    <Wrapper {...rest}>
      <h1>{title}</h1>
      {children}
    </Wrapper>
    {{else}}
    <Wrapper {...rest}>
      <div>Here more JSX</div>
    </Wrapper>
    {{/ifEqual}}
  {{else}}
    {{#ifEqual "yes" examples}}
    <div>
      <h1>{title}</h1>
      {children}
    </div>
    {{else}}
    <div>Here more JSX</div>
    {{/ifEqual}}
  {{/ifNotEqual}}
  )
}

{{pascalCase name}}.displayName = '{{pascalCase name}}'
{{#ifEqual "yes" examples}}
{{pascalCase name}}.defaultProps = {
  title: 'Hello World'
}
{{else}}
{{pascalCase name}}.defaultProps = {}
{{/ifEqual}}
